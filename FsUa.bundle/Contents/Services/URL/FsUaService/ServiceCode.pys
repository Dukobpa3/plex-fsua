import re


def MediaObjectsForURL(url):
    page = HTML.ElementFromURL(url=url)

    media_object = MediaObject(
        container=Container.MP4,
        video_codec=VideoCodec.H264,
        optimized_for_streaming=True,
    )

    pagecss = page.cssselect('.m-player-movie script')
    if (not pagecss is None) and (len(pagecss) > 0):
        script_part = pagecss[0].text_content()

        begin = script_part.index('playlist:')
        begin = script_part.index('[', begin)
        end = script_part.index('};', begin)

        playlist = script_part[begin:end]
        # normalize JSON
#        Log('pl:%s', playlist)
        playlist = re.sub(r'(?<=[\s{])(\w+):', r'"\1":', playlist)
        playlist = re.sub(r':\s+\'(.*?)\'\s*?([,\]\}])', r': "\1"\2', playlist)
        # kill "false,}" in the original JSON
        playlist = re.sub(r',\s*?}', r'}', playlist)
        
        movies = JSON.ObjectFromString(playlist)
        media_object.parts = []
        for key in range(len(movies)):
            movie = movies[key]
            Log('mov parts:%s', movie['url'])
            media_object.parts.append(
                PartObject(key='http://fs.to' + movie['url']) 
            )
    else:
        media_object.parts=[
            PartObject(
                key='CANT_PLAY_NOT_FOUND!!!'
            )
        ]

    Log('parts count:%d', len(media_object.parts))
    if len(media_object.parts) > 1:
      Log('MEDIA ADD!!!!!')
      return [
        MediaObject(
            parts = [
                PartObject(
                    key='http://fs.to' + movies[i]['url']#Callback(PlayVideo, url=url, bitrate=str(bitrate), index=i)
                ) for i in range(len(movies))
            ],
            container = Container.MP4,
            video_codec = VideoCodec.H264,
            audio_codec = AudioCodec.AAC,
            audio_channels = 2,
            optimized_for_streaming = True
        ) 
    ]

    return [media_object]
